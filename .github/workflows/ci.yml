name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  qml:
    name: QML Lint and Format
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository.
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install QML dev tools.
        run: sudo apt install qtdeclarative5-dev-tools
      - name: Lint QML files.
        run: qmllint src/**/*.qml
      - name: Lint QML files.
        run: qmlformat --inplace src/**/*.qml
  build:
    name: Build with LLVM ${{ matrix.llvm_version }}
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        llvm_version: [15, 16, 17]
    steps:
      - name: Checkout repository.
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup go.
        uses: actions/setup-go@v4.1.0
        with:
          go-version: "stable"
          cache-dependency-path: tailwrap/go.sum
      - name: Vendor go dependencies.
        run: go mod vendor
        working-directory: tailwrap
      - name: Update apt cache.
        run: sudo apt-get update -yq
      - name: Install CMake.
        run: sudo apt-get install -yq cmake
      - name: Add LLVM apt key.
        run: wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
      - name: Add LLVM repo.
        run: sudo add-apt-repository -y "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-${{ matrix.llvm_version }} main"
      - name: Install clang.
        run: sudo apt install clang-${{ matrix.llvm_version }}
      - name: Install Qt dependencies.
        run: sudo apt-get install -yq qtbase5-dev qtdeclarative5-dev qtquickcontrols2-5-dev libqt5svg5-dev
      - name: Install KDE dependencies.
        run: sudo apt-get install -yq appstream gettext extra-cmake-modules kirigami2-dev libkf5coreaddons-dev libkf5i18n-dev libkf5config-dev libkf5notifications-dev libkf5guiaddons-dev
      - name: Configure CMake project.
        run: CC=clang-${{ matrix.llvm_version }} CXX=clang++-${{ matrix.llvm_version }} cmake -B build
      - name: Build CMake project.
        run: cmake --build build
  flatpak_build:
    name: Flatpak build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository.
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Update apt cache.
        run: sudo apt-get update -yq
      - name: Install flatpak-builder.
        run: sudo apt-get install -yq flatpak-builder flatpak
      - name: Add flathub remote.
        run: flatpak remote-add --user --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
      - name: Install Builder.
        run: flatpak install --user -y flathub org.flatpak.Builder
      - name: Validate manifest.
        run: flatpak run --command=flatpak-builder-lint org.flatpak.Builder manifest org.fkoehler.KTailctl.yml
      - name: Install external data checker.
        run: flatpak install --user -y flathub org.flathub.flatpak-external-data-checker
      - name: Check external data.
        run: flatpak run org.flathub.flatpak-external-data-checker --check-outdated org.fkoehler.KTailctl.yml
      - name: Install KDE SDK.
        run: flatpak install --user -y flathub org.kde.Sdk//5.15-23.08 org.kde.Platform/x86_64/5.15-23.08
      - name: Install Go SDK.
        run: flatpak install --user -y flathub org.freedesktop.Sdk.Extension.golang/x86_64/23.08
      - name: Install LLVM SDK.
        run: flatpak install --user -y flathub runtime/org.freedesktop.Sdk.Extension.llvm17/x86_64/23.08
      - name: Setup go.
        uses: actions/setup-go@v4.1.0
        with:
          go-version: "stable"
      - name: Vendor go dependencies.
        run: go mod vendor
        working-directory: tailwrap
      - name: Build.
        run: flatpak-builder --user --force-clean build-dir org.fkoehler.KTailctl.yml
